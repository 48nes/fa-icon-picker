{"version":3,"file":"index.js","sources":["../src/IconListItem.tsx","../src/iconList.ts","../src/IconPicker.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport * as CSS from 'csstype'\r\nimport { IconList } from '.'\r\n\r\ninterface IconPickerItemProps {\r\n  icon: IconList\r\n  size?: number\r\n  color?: string\r\n  onClick?: (icon: string) => void\r\n  containerStyles?: CSS.Properties\r\n}\r\n\r\nconst IconPickerItem: React.SFC<IconPickerItemProps> = ({\r\n  icon,\r\n  size,\r\n  color,\r\n  onClick,\r\n  containerStyles,\r\n}) => {\r\n  const iconDiv = !!icon ? React.createElement('i', { className : icon }) : <div />\r\n  return (\r\n    <div\r\n      onClick={() => !!onClick && onClick(icon)}\r\n      style={{ fontSize: size, color: color, padding: 2, ...containerStyles }}\r\n    >\r\n      {iconDiv}\r\n    </div>\r\n  )\r\n}\r\n\r\nIconPickerItem.defaultProps = {\r\n  color: '#000',\r\n  size: 24,\r\n  onClick: (_: string) => {},\r\n}\r\n\r\nexport { IconPickerItem }\r\n","export const iconList = [\r\n  'fas fa-cat',\r\n  'fas fa-heart',\r\n]","import * as React from 'react'\r\nimport styled from 'styled-components'\r\nimport { IconPickerItem, iconList } from '.'\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport * as CSS from 'csstype'\r\nimport { IconList } from './iconType'\r\n\r\ninterface IconPickerProps {\r\n  value: IconList\r\n  onChange: (value: IconList) => void\r\n  hideSearch?: boolean\r\n  containerStyles?: CSS.Properties\r\n  buttonStyles?: CSS.Properties\r\n  buttonIconStyles?: CSS.Properties\r\n  pickerIconStyles?: CSS.Properties\r\n  searchInputStyles?: CSS.Properties\r\n}\r\n\r\nconst IconPicker: React.SFC<IconPickerProps> = ({\r\n  value,\r\n  onChange,\r\n  hideSearch,\r\n  containerStyles,\r\n  buttonStyles,\r\n  buttonIconStyles,\r\n  pickerIconStyles,\r\n  searchInputStyles,\r\n}) => {\r\n  const ref = useRef(null)\r\n  const [display, changeDisplay] = useState(false)\r\n  const [searchString, setSearchString] = useState('')\r\n  useEffect(() => {\r\n    function handleClickOutside(event: any) {\r\n      // @ts-ignore\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        changeDisplay(false)\r\n      }\r\n    }\r\n    document.addEventListener('mousedown', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside)\r\n    }\r\n  }, [ref])\r\n  const buttonClick = () => changeDisplay(!display)\r\n  const onChangeSearch = (event: any) => {\r\n    setSearchString(event.target.value)\r\n  }\r\n  return (\r\n    <Container style={buttonStyles} ref={ref} onClick={() => buttonClick()}>\r\n      <IconPickerItem containerStyles={buttonIconStyles} icon={value} />\r\n      {display && (\r\n        <PickerContainer\r\n          style={containerStyles}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {!hideSearch && (\r\n            <AppInput\r\n              style={searchInputStyles}\r\n              onChange={onChangeSearch}\r\n              value={searchString}\r\n              placeholder=\"Search\"\r\n            />\r\n          )}\r\n          {iconList\r\n            .filter((i: string) =>\r\n              i.toLowerCase().includes(searchString.toLowerCase())\r\n            )\r\n            .map((icon: IconList) => (\r\n              <IconPickerItem\r\n                key={icon}\r\n                icon={icon}\r\n                containerStyles={pickerIconStyles}\r\n                onClick={(value: IconList) => {\r\n                  onChange(value)\r\n                  changeDisplay(false)\r\n                  setSearchString('')\r\n                }}\r\n              />\r\n            ))}\r\n        </PickerContainer>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nIconPicker.defaultProps = {\r\n  hideSearch: false,\r\n}\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  padding: 5px;\r\n  width: 50px;\r\n  min-height: 40px;\r\n  border-radius: 4px;\r\n  border-width: 1px;\r\n  border-color: #000;\r\n  border-style: solid;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst PickerContainer = styled.div`\r\n  position: absolute;\r\n  top: 45px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  overflow-y: scroll;\r\n  background-color: #fff;\r\n  padding: 5px;\r\n  width: 200px;\r\n  max-height: 300px;\r\n  border-radius: 4px;\r\n  border-width: 2px;\r\n  border-color: #000;\r\n  border-style: solid;\r\n  z-index: 10;\r\n`\r\n\r\nconst AppInput = styled.input`\r\n  width: 100%;\r\n`\r\n\r\nexport { IconPicker }\r\n"],"names":["React","useRef","useState","useEffect","styled"],"mappings":"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"}